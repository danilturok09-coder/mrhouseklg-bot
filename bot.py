import os
import threading
import asyncio
from flask import Flask, request
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    ContextTypes,
    filters
)

# === –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ===
TOKEN = "8497588100:AAFYuucn9j8teDlWZ6htv_N7IbaXLp1TQB8"  # –≤—Å—Ç–∞–≤—å —Å—é–¥–∞ —Ç–æ–∫–µ–Ω
WEBHOOK_URL = "https://mrhouseklg-bot.onrender.com/webhook"

# === Flask ===
web_app = Flask(__name__)

# === Telegram Application ===
application = Application.builder().token(TOKEN).build()


# === –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ===
def get_main_menu():
    keyboard = [
        ["–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≥–æ—Ç–æ–≤—ã–µ –¥–æ–º–∞", "–£–∑–Ω–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞"],
        ["–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ–µ–∫—Ç—ã –∏ —Ü–µ–Ω—ã", "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã"]
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)


# === –ö–æ–º–∞–Ω–¥–∞ /start ===
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    print(f"üì© –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {update.effective_user.id} –∑–∞–ø—É—Å—Ç–∏–ª /start")
    await update.message.reply_text(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç Mr. House üë∑‚Äç‚ôÇÔ∏è\n"
        "–ó–¥–µ—Å—å –í—ã –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –Ω–∞—à–∏–º–∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏, –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≥–æ—Ç–æ–≤—ã–µ –¥–æ–º–∞, "
        "—É–∑–Ω–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –∏ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –Ω–∞—à–µ–º—É –ø–æ–º–æ—â–Ω–∏–∫—É.",
        reply_markup=get_main_menu()
    )


# === –ö–æ–º–∞–Ω–¥–∞ /debug ===
async def debug(update: Update, context: ContextTypes.DEFAULT_TYPE):
    me = await context.bot.get_me()
    await update.message.reply_text(
        f"‚úÖ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω!\n–ò–º—è: {me.first_name}\nUsername: @{me.username}\nID: {me.id}"
    )


# === –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π ===
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    print(f"üí¨ –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: {text}")

    if text == "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≥–æ—Ç–æ–≤—ã–µ –¥–æ–º–∞":
        await update.message.reply_text("üè° –ì–æ—Ç–æ–≤—ã–µ –¥–æ–º–∞:\n\n–†–∞–∑–¥–µ–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...")
    elif text == "–£–∑–Ω–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞":
        await update.message.reply_text("üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞:\n\n–†–∞–∑–¥–µ–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...")
    elif text == "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ–µ–∫—Ç—ã –∏ —Ü–µ–Ω—ã":
        await update.message.reply_text("üìê –ü—Ä–æ–µ–∫—Ç—ã –∏ —Ü–µ–Ω—ã:\n\n–†–∞–∑–¥–µ–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...")
    elif text == "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã":
        await update.message.reply_text(
            "‚ùì –ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å ‚Äî –º–µ–Ω–µ–¥–∂–µ—Ä –æ—Ç–≤–µ—Ç–∏—Ç!\n"
            "–ò–ª–∏ –∑–≤–æ–Ω–∏—Ç–µ: +7 (999) 123-45-67"
        )
    else:
        await update.message.reply_text("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ:", reply_markup=get_main_menu())


# === –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ ===
application.add_handler(CommandHandler("start", start))
application.add_handler(CommandHandler("debug", debug))
application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))


# === Flask –º–∞—Ä—à—Ä—É—Ç—ã ===
@web_app.route('/')
def home():
    return "‚úÖ Mr. House Bot —Ä–∞–±–æ—Ç–∞–µ—Ç!"


@web_app.route('/set_webhook')
def set_webhook():
    loop = asyncio.get_event_loop()
    loop.create_task(application.bot.set_webhook(url=WEBHOOK_URL))
    return f"‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ {WEBHOOK_URL}"


@web_app.route('/webhook', methods=['POST'])
def webhook():
    data = request.get_json(force=True)
    print(f"üì® –ü–æ–ª—É—á–µ–Ω –∞–ø–¥–µ–π—Ç –æ—Ç Telegram: {data}")
    update = Update.de_json(data, application.bot)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –≤ event loop Telegram Application
    asyncio.run_coroutine_threadsafe(application.process_update(update), application.loop)
    return "OK", 200


# === –§–æ–Ω–æ–≤—ã–π –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ ===
def run_bot():
    async def start():
        print("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Application...")
        await application.initialize()
        await application.start()
        await application.bot.set_webhook(url=WEBHOOK_URL)
        print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.")

    asyncio.run(start())


if __name__ == "__main__":
    # Telegram Application –∑–∞–ø—É—Å–∫–∞–µ–º –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    threading.Thread(target=run_bot, daemon=True).start()

    # Flask ‚Äî –æ—Å–Ω–æ–≤–Ω–æ–π –≤–µ–±-—Å–µ—Ä–≤–µ—Ä
    web_app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 10000)))
