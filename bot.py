import asyncio
import os
import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, ContextTypes

# === üîß –ù–ê–°–¢–†–û–ô–ö–ò ===
TOKEN = "8497588100:AAFYuucn9j8teDlWZ6htv_N7IbaXLp1TQB8"
WEBHOOK_URL = "https://mrhouseklg-bot.onrender.com/webhook"

# === –õ–û–ì–ò ===
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# === –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò ===
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("–£–∑–Ω–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞", callback_data="price"),
         InlineKeyboardButton("–ù–∞—à–∏ –ø—Ä–æ–µ–∫—Ç—ã", callback_data="projects")],
        [InlineKeyboardButton("–ö–æ–Ω—Ç–∞–∫—Ç—ã", callback_data="contacts"),
         InlineKeyboardButton("–û –∫–æ–º–ø–∞–Ω–∏–∏", callback_data="about")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç MR.House. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?",
        reply_markup=reply_markup
    )

async def debug(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("‚úÖ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω –∏ –ø–æ–ª—É—á–∞–µ—Ç –∞–ø–¥–µ–π—Ç—ã!")

# === –û–°–ù–û–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø ===
async def main():
    # –°–æ–∑–¥–∞—ë–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(TOKEN).build()

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ö–µ–Ω–¥–ª–µ—Ä—ã
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("debug", debug))

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è (–æ–¥–∏–Ω —Ä–∞–∑!)
    await application.initialize()
    logger.info("‚úÖ Application initialized")

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–µ–±—Ö—É–∫
    await application.bot.set_webhook(WEBHOOK_URL)
    logger.info(f"üîó Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ {WEBHOOK_URL}")

    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤–µ–±—Ö—É–∫-—Å–µ—Ä–≤–µ—Ä
    port = int(os.environ.get("PORT", 8443))
    logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ –≤–µ–±—Ö—É–∫-—Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –ø–æ—Ä—Ç—É {port}...")
    
    await application.run_webhook(
        listen="0.0.0.0",
        port=port,
        webhook_url=WEBHOOK_URL,
        secret_token=None  # –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    )

# === –¢–û–ß–ö–ê –í–•–û–î–ê ===
if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        logger.info("üõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤—Ä—É—á–Ω—É—é")
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        raise