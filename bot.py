import os
import logging
import asyncio
from flask import Flask, request
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    Application,
    CommandHandler,
    CallbackQueryHandler,
    ContextTypes,
)

# === üîß –ù–ê–°–¢–†–û–ô–ö–ò ===
TOKEN = "8497588100:AAFYuucn9j8teDlWZ6htv_N7IbaXLp1TQB8"  # ‚ö†Ô∏è –í–°–¢–ê–í–¨ –°–í–û–ô –¢–û–ö–ï–ù!
WEBHOOK_URL = "https://mrhouseklg-bot.onrender.com/webhook"

# === –õ–û–ì–ò ===
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# === –°–û–ó–î–ê–Å–ú –ü–†–ò–õ–û–ñ–ï–ù–ò–ï Telegram ===
application = Application.builder().token(TOKEN).build()

# === –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò ===
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [
            InlineKeyboardButton("üèó –£–∑–Ω–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞", callback_data="price"),
            InlineKeyboardButton("üìÇ –ù–∞—à–∏ –ø—Ä–æ–µ–∫—Ç—ã", callback_data="projects"),
        ],
        [
            InlineKeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã", callback_data="contacts"),
            InlineKeyboardButton("‚ÑπÔ∏è –û –∫–æ–º–ø–∞–Ω–∏–∏", callback_data="about"),
        ],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç **MR.House** ‚Äî –∞–≥–µ–Ω—Ç—Å—Ç–≤–∞ –∑–∞–≥–æ—Ä–æ–¥–Ω–æ–π –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏.\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª –Ω–∏–∂–µ üëá",
        reply_markup=reply_markup,
        parse_mode="Markdown"
    )

async def debug(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("‚úÖ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω –∏ –ø–æ–ª—É—á–∞–µ—Ç –∞–ø–¥–µ–π—Ç—ã!")

async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–†–µ–∞–∫—Ü–∏—è –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–æ–∫"""
    query = update.callback_query
    await query.answer()
    await query.message.reply_text("‚öôÔ∏è –≠—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. –°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏!")

# === –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø –û–ë–†–ê–ë–û–¢–ß–ò–ö–û–í ===
application.add_handler(CommandHandler("start", start))
application.add_handler(CommandHandler("debug", debug))
application.add_handler(CallbackQueryHandler(button_handler))

# === Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ ===
web_app = Flask(__name__)

@web_app.route("/", methods=["GET"])
def index():
    return "‚úÖ MR.House –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!"

@web_app.route("/set_webhook", methods=["GET"])
def set_webhook():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ–±—Ö—É–∫–∞"""
    try:
        asyncio.get_event_loop().run_until_complete(
            application.bot.set_webhook(WEBHOOK_URL)
        )
        return f"Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ {WEBHOOK_URL}"
    except Exception as e:
        return f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –≤–µ–±—Ö—É–∫–∞: {e}"

@web_app.route("/webhook", methods=["POST"])
async def webhook():
    """–ü–æ–ª—É—á–∞–µ–º –∞–ø–¥–µ–π—Ç—ã –æ—Ç Telegram"""
    try:
        update = Update.de_json(request.get_json(force=True), application.bot)
        logger.info(f"üì® –ü–æ–ª—É—á–µ–Ω –∞–ø–¥–µ–π—Ç –æ—Ç Telegram: {update}")
        await application.initialize()
        await application.process_update(update)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞–ø–¥–µ–π—Ç–∞: {e}")
    return "OK"

if __name__ == "__main__":
    # –õ–æ–∫–∞–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫
    asyncio.get_event_loop().run_until_complete(application.bot.set_webhook(WEBHOOK_URL))
    web_app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 10000)))
