# scripts/create_pr.py
# ------------------------------------------------------------------------------
# –°–æ–∑–¥–∞—ë—Ç Pull Request —Å –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏, —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ ai_patch.py
# ------------------------------------------------------------------------------

import os
import subprocess
import requests

def sh(cmd):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç shell-–∫–æ–º–∞–Ω–¥—ã"""
    return subprocess.check_output(cmd, shell=True, text=True).strip()

def main():
    branch = sh("git rev-parse --abbrev-ref HEAD")
    if branch == "main":
        print("‚ÑπÔ∏è  –í–µ—Ç–∫–∞ main ‚Äî PR –Ω–µ –Ω—É–∂–µ–Ω.")
        return

    repo = os.environ.get("GITHUB_REPOSITORY")
    token = os.environ.get("GH_TOKEN") or os.environ.get("MY_GITHUB_TOKEN")

    if not repo or not token:
        print("‚ùå –ù–µ—Ç —Ç–æ–∫–µ–Ω–∞ GH_TOKEN –∏–ª–∏ MY_GITHUB_TOKEN")
        return

    print(f"üì§ –°–æ–∑–¥–∞—é Pull Request –∏–∑ –≤–µ—Ç–∫–∏ {branch} ‚Üí main")

    headers = {
        "Authorization": f"Bearer {token}",
        "Accept": "application/vnd.github+json",
    }
    data = {
        "title": f"AutoDev: {branch}",
        "head": branch,
        "base": "main",
        "body": "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π PR, —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π AI-–ø–∞—Ç—á–µ—Ä–æ–º ü§ñ",
    }
    r = requests.post(
        f"https://api.github.com/repos/{repo}/pulls",
        headers=headers,
        json=data,
        timeout=60,
    )
    print("‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç:", r.status_code, r.text)

if name == "__main__":
    main()
